{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/articles/2019-02/React-eject-없이-babelrc-적용","result":{"data":{"site":{"siteMetadata":{"title":"GyeongSu Han's Github Pages","author":"@micalgenus","siteUrl":"https://micalgenus.github.io"}},"markdownRemark":{"id":"f9ee2312-a15b-5786-8952-f5f4affd03a4","html":"<p>CRA으로 프로젝트를 생성한 뒤, .babelrc파일을 생성하여 설정하면 적용이 되지 않습니다.</p>\n<p><strong>./node_modules/react-scripts/config/webpack.config.js</strong>를 살펴보면 다음과 같이 설정되어있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">test</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\.(js|mjs|jsx|ts|tsx)$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">include</span><span class=\"token operator\">:</span> paths<span class=\"token punctuation\">.</span>appSrc<span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">loader</span><span class=\"token operator\">:</span> require<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token string\">'babel-loader'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">options</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">customize</span><span class=\"token operator\">:</span> require<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>\n      <span class=\"token string\">'babel-preset-react-app/webpack-overrides'</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// @remove-on-eject-begin</span>\n    <span class=\"token literal-property property\">babelrc</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">configFile</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">presets</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>require<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token string\">'babel-preset-react-app'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// Make sure we have a unique cache identifier, erring on the</span>\n    <span class=\"token comment\">// side of caution.</span>\n    <span class=\"token comment\">// We remove this when the user ejects because the default</span>\n    <span class=\"token comment\">// is sane and uses Babel options. Instead of options, we use</span>\n    <span class=\"token comment\">// the react-scripts and babel-preset-react-app versions.</span>\n    <span class=\"token literal-property property\">cacheIdentifier</span><span class=\"token operator\">:</span> <span class=\"token function\">getCacheIdentifier</span><span class=\"token punctuation\">(</span>\n      isEnvProduction\n        <span class=\"token operator\">?</span> <span class=\"token string\">'production'</span>\n        <span class=\"token operator\">:</span> isEnvDevelopment <span class=\"token operator\">&amp;&amp;</span> <span class=\"token string\">'development'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">'babel-plugin-named-asset-import'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'babel-preset-react-app'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'react-dev-utils'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'react-scripts'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// @remove-on-eject-end</span>\n    <span class=\"token literal-property property\">plugins</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">[</span>\n        require<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token string\">'babel-plugin-named-asset-import'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span>\n          <span class=\"token literal-property property\">loaderMap</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token literal-property property\">svg</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n              <span class=\"token literal-property property\">ReactComponent</span><span class=\"token operator\">:</span> <span class=\"token string\">'@svgr/webpack?-svgo![path]'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// This is a feature of `babel-loader` for webpack (not Babel itself).</span>\n    <span class=\"token comment\">// It enables caching results in ./node_modules/.cache/babel-loader/</span>\n    <span class=\"token comment\">// directory for faster rebuilds.</span>\n    <span class=\"token literal-property property\">cacheDirectory</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">cacheCompression</span><span class=\"token operator\">:</span> isEnvProduction<span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">compact</span><span class=\"token operator\">:</span> isEnvProduction<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>10번줄에 <code class=\"language-text\">babelrc: false</code>에 의해서 .babelrc를 만들어도 적용되지 않습니다.</p>\n<p>이를 해결하기 위해 <a href=\"https://github.com/timarney/react-app-rewired\">react-app-rewired</a>를 사용하겠습니다.</p>\n<p>해당 모듈을 사용하기 위해 <code class=\"language-text\">pacakge.json</code>의 스크립트중 <code class=\"language-text\">start</code>, <code class=\"language-text\">test</code>, <code class=\"language-text\">build</code>에 있는 <code class=\"language-text\">react-scripts</code>를 <code class=\"language-text\">react-app-rewired</code>로 변경해 줍니다.</p>\n<p>저의 경우는 다음과 같이 변경하였습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">\"scripts\": {\n  \"start\": \"react-app-rewired start\",\n  \"build\": \"react-app-rewired build\",\n  \"test\": \"react-app-rewired test\",\n  ...\n},</code></pre></div>\n<p>그 후 <code class=\"language-text\">config-overrides.js</code>에 설정을 재정의 해줍니다. 이 설정을 위해 <a href=\"https://github.com/arackaf/customize-cra\">customize-cra</a>모듈을 사용하면 편리합니다.</p>\n<p><strong>babelrc</strong>(.babelrc, .babelrc.js)파일을 사용하기 위해서는 <code class=\"language-text\">config-overrides.js</code>에 다음과 같이 추가해주면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> override<span class=\"token punctuation\">,</span> useBabelRc <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'customize-cra'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token function\">override</span><span class=\"token punctuation\">(</span><span class=\"token function\">useBabelRc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","frontmatter":{"categories":["React"],"title":"React eject 없이 babelrc 적용","date":"Feb 28, 2019","tags":["React","babel"]}}},"pageContext":{"comments":true,"previous":{"frontmatter":{"path":"/articles/2019-02/Jest-it","title":"Jest it","comments":true}},"next":{"frontmatter":{"path":"/articles/2019-03/React-snap-puppeteer-no-sandbox","title":"React snap puppeteer no-sandbox","comments":true}}}}}