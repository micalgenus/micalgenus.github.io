{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/articles/2019-02/Docker-Nginx-Letsencrypt-SSL-인증서-적용","result":{"data":{"site":{"siteMetadata":{"title":"GyeongSu Han's Github Pages","author":"@micalgenus","siteUrl":"https://micalgenus.github.io"}},"markdownRemark":{"id":"467d8962-71cd-5687-a467-174f7900b8ba","html":"<p><a href=\"/articles/2019-02/install-nginx-in-docker\">Docker nginx 설치</a>에서 만들어진 컨테이너에 <code class=\"language-text\">Lets&#39;encrypt</code>인증서로 HTTPS를 사용하겠습니다.</p>\n<p>저는 미리 만들어둔 인증서를 사용하였습니다.</p>\n<p>CentOS의 경우 selinux를 위해 context를 변경해줍니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@micalgenus-com micalgenus<span class=\"token punctuation\">]</span><span class=\"token comment\"># chcon -R -u system_u -t svirt_sandbox_file_t /etc/letsencrypt/</span></code></pre></div>\n<p>그 후 인증서 파일을 마운트 시켜줍니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@micalgenus-com micalgenus<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat /etc/systemd/system/nginx.service</span>\n<span class=\"token punctuation\">[</span>Unit<span class=\"token punctuation\">]</span>\n<span class=\"token assign-left variable\">Description</span><span class=\"token operator\">=</span>Nginx Container\n<span class=\"token assign-left variable\">After</span><span class=\"token operator\">=</span>docker.service\n<span class=\"token assign-left variable\">Requires</span><span class=\"token operator\">=</span>docker.service\n\n<span class=\"token punctuation\">[</span>Service<span class=\"token punctuation\">]</span>\n<span class=\"token assign-left variable\">TimeoutStartSec</span><span class=\"token operator\">=</span><span class=\"token number\">0</span>\n<span class=\"token assign-left variable\">Restart</span><span class=\"token operator\">=</span>always\n<span class=\"token assign-left variable\">ExecStartPre</span><span class=\"token operator\">=</span>/usr/bin/docker pull nginx:latest\n<span class=\"token assign-left variable\">ExecStart</span><span class=\"token operator\">=</span>/usr/bin/docker run --name nginx -p <span class=\"token number\">80</span>:80 -p <span class=\"token number\">443</span>:443 -v /etc/letsencrypt:/etc/letsencrypt -v /etc/nginx:/etc/nginx -v /var/log/nginx:/var/log/nginx nginx:latest\n<span class=\"token assign-left variable\">ExecStop</span><span class=\"token operator\">=</span>/usr/bin/docker stop -t <span class=\"token number\">2</span> nginx\n<span class=\"token assign-left variable\">ExecStopPost</span><span class=\"token operator\">=</span>/usr/bin/docker <span class=\"token function\">rm</span> -f nginx\n\n<span class=\"token punctuation\">[</span>Install<span class=\"token punctuation\">]</span>\n<span class=\"token assign-left variable\">WantedBy</span><span class=\"token operator\">=</span>multi-user.target\n<span class=\"token punctuation\">[</span>root@micalgenus-com micalgenus<span class=\"token punctuation\">]</span><span class=\"token comment\">#</span></code></pre></div>\n<p>컨테이너를 다시 실행해 줍니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@micalgenus-com micalgenus<span class=\"token punctuation\">]</span><span class=\"token comment\"># systemctl daemon-reload</span>\n<span class=\"token punctuation\">[</span>root@micalgenus-com micalgenus<span class=\"token punctuation\">]</span><span class=\"token comment\"># systemctl restart nginx</span></code></pre></div>\n<p><code class=\"language-text\">virtual host</code>를 사용하여 인증서를 확인하기 위해 디렉토리를 만듭니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@micalgenus-com micalgenus<span class=\"token punctuation\">]</span><span class=\"token comment\"># cd /etc/nginx</span>\n<span class=\"token punctuation\">[</span>root@micalgenus-com nginx<span class=\"token punctuation\">]</span><span class=\"token comment\"># mkdir sites-enabled sites-available</span></code></pre></div>\n<p>그 후 해당 디렉토리를 설정에 추가해 줍니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@micalgenus-com micalgenus<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat /etc/nginx/nginx.conf</span>\nuser  nginx<span class=\"token punctuation\">;</span>\nworker_processes  <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\nerror_log  /var/log/nginx/error.log warn<span class=\"token punctuation\">;</span>\npid        /var/run/nginx.pid<span class=\"token punctuation\">;</span>\nevents <span class=\"token punctuation\">{</span>\n    worker_connections  <span class=\"token number\">1024</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\nhttp <span class=\"token punctuation\">{</span>\n    include       /etc/nginx/mime.types<span class=\"token punctuation\">;</span>\n    default_type  application/octet-stream<span class=\"token punctuation\">;</span>\n    log_format  main  <span class=\"token string\">'<span class=\"token variable\">$remote_addr</span> - <span class=\"token variable\">$remote_user</span> [<span class=\"token variable\">$time_local</span>] \"<span class=\"token variable\">$request</span>\" '</span>\n                      <span class=\"token string\">'<span class=\"token variable\">$status</span> <span class=\"token variable\">$body_bytes_sent</span> \"<span class=\"token variable\">$http_referer</span>\" '</span>\n                      <span class=\"token string\">'\"<span class=\"token variable\">$http_user_agent</span>\" \"<span class=\"token variable\">$http_x_forwarded_for</span>\"'</span><span class=\"token punctuation\">;</span>\n    access_log  /var/log/nginx/access.log  main<span class=\"token punctuation\">;</span>\n    sendfile        on<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">#tcp_nopush     on;</span>\n    keepalive_timeout  <span class=\"token number\">65</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">#gzip  on;</span>\n    include /etc/nginx/conf.d/*.conf<span class=\"token punctuation\">;</span>\n    include /etc/nginx/sites-enabled/*.conf<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>이제 SSL 설정을 추가해보겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@micalgenus-com micalgenus<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat /etc/nginx/sites-available/default.conf</span>\nserver <span class=\"token punctuation\">{</span>\n    listen <span class=\"token number\">80</span> default<span class=\"token punctuation\">;</span>\n    server_name _<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\nserver <span class=\"token punctuation\">{</span>\n    listen <span class=\"token number\">443</span> ssl<span class=\"token punctuation\">;</span>\n    ssl on<span class=\"token punctuation\">;</span>\n    ssl_certificate     /etc/letsencrypt/live/micalgenus.com/fullchain.pem<span class=\"token punctuation\">;</span>\n    ssl_certificate_key /etc/letsencrypt/live/micalgenus.com/privkey.pem<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>sites-available 디렉토리에 설정파일을 만들었으니 이제 적용을 위해 심볼릭 링크를 만듭니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@micalgenus-com micalgenus<span class=\"token punctuation\">]</span><span class=\"token comment\"># ln -s /etc/nginx/sites-available/default.conf /etc/nginx/sites-enabled/default.conf</span></code></pre></div>\n<p>서버를 재시작 하면 설정이 적용됨을 확인할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@micalgenus-com micalgenus<span class=\"token punctuation\">]</span><span class=\"token comment\"># systemctl restart nginx</span></code></pre></div>\n<p><img src=\"/img/2019-02/setup-letsencryt-ssl-in-nginx-on-docker/img1.png\" alt=\"img1\"></p>","frontmatter":{"categories":["Server"],"title":"Docker Nginx Letsencrypt SSL 인증서 적용","date":"Feb 15, 2019","tags":["Docker","nginx","letsencryt"]}}},"pageContext":{"comments":true,"previous":{"frontmatter":{"path":"/articles/2019-02/Docker-nginx-설치","title":"Docker nginx 설치","comments":true}},"next":{"frontmatter":{"path":"/articles/2019-02/change-firewalld-default-zone","title":"Firewalld zone 변경","comments":true}}}}}