{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/articles/2019-03/Nextjs-custom-polyfill","result":{"data":{"site":{"siteMetadata":{"title":"GyeongSu Han's Github Pages","author":"@micalgenus","siteUrl":"https://micalgenus.github.io"}},"markdownRemark":{"id":"e188cee6-8ef1-5a08-94da-7bd639a038d3","html":"<p>React프레임워크인 Next.js에서 polyfill을 적용할 때, webpack의 설정을 다음과 같이 추가하면 된다.</p>\n<blockquote>\n<p>next.config.js</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">webpack</span><span class=\"token operator\">:</span> <span class=\"token parameter\">config</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Unshift polyfills in main entrypoint.</span>\n    <span class=\"token keyword\">const</span> originalEntry <span class=\"token operator\">=</span> config<span class=\"token punctuation\">.</span>entry<span class=\"token punctuation\">;</span>\n    config<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">entry</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> entries <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">originalEntry</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>entries<span class=\"token punctuation\">[</span><span class=\"token string\">'main.js'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> entries<span class=\"token punctuation\">[</span><span class=\"token string\">'main.js'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">unshift</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./polyfills.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">return</span> entries<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> config<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>위와 같이 추가한 후, <strong>.babelrc</strong>의 <code class=\"language-text\">next/babel</code>프리셋중 <strong>useBuiltIns</strong>를 <strong>“entry”</strong>로 변경해준다.</p>\n<blockquote>\n<p>.babelrc</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"presets\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">[</span>\n      <span class=\"token string\">\"next/babel\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"preset-env\"</span><span class=\"token operator\">:</span>\n        <span class=\"token punctuation\">{</span>\n          <span class=\"token property\">\"useBuiltIns\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"entry\"</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>마지막으로 <code class=\"language-text\">polyfill.js</code>파일을 만들어 하고자 하는 polyfill 설정을 적용하면 된다.</p>\n<p>참고: <a href=\"https://github.com/zeit/next.js/issues/2060\">예제</a></p>","frontmatter":{"categories":["React"],"title":"Next.js Custom polyfill 적용하기","date":"Mar 26, 2019","tags":["React","Next.js"]}}},"pageContext":{"comments":true,"previous":{"frontmatter":{"path":"/articles/2019-03/Nodejs-import후-export하기","title":"Nodejs import후 export하기","comments":true}},"next":{"frontmatter":{"path":"/articles/2019-03/Nextjs-publicRuntimeConfig-적용","title":"Nextjs publicRuntimeConfig 적용","comments":true}}}}}