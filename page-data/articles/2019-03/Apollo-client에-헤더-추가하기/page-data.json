{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/articles/2019-03/Apollo-client에-헤더-추가하기","result":{"data":{"site":{"siteMetadata":{"title":"GyeongSu Han's Github Pages","author":"@micalgenus","siteUrl":"https://micalgenus.github.io"}},"markdownRemark":{"id":"040bcd40-7f86-5c6b-89b5-e8124d9fdf05","html":"<p>Apollo client를 사용할 때, header를 설정하려면 ApolloClient를 다음과 같이 하면된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ApolloClient <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'apollo-client'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ApolloLink<span class=\"token punctuation\">,</span> concat <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'apollo-link'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> createHttpLink <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'apollo-link-http'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> InMemoryCache <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'apollo-cache-inmemory'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> fetch <span class=\"token keyword\">from</span> <span class=\"token string\">'isomorphic-fetch'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> httpLink <span class=\"token operator\">=</span> <span class=\"token function\">createHttpLink</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> uri<span class=\"token operator\">:</span> <span class=\"token constant\">URL</span><span class=\"token punctuation\">,</span> fetch <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> authMiddleware <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ApolloLink</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">operation<span class=\"token punctuation\">,</span> forward</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  operation<span class=\"token punctuation\">.</span><span class=\"token function\">setContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> headers<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token string\">'x-access-token'</span><span class=\"token operator\">:</span> <span class=\"token function\">getLoginToken</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>forward<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token function\">forward</span><span class=\"token punctuation\">(</span>operation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> client <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ApolloClient</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  link<span class=\"token operator\">:</span> <span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>authMiddleware<span class=\"token punctuation\">,</span> httpLink<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  cache<span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">InMemoryCache</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"language-text\">ApolloLink</code>를 사용하여 <code class=\"language-text\">authMiddleware</code>를 만든 후, <strong>link</strong>에 <code class=\"language-text\">concat</code>을 이용하여 적용시켜주면 된다.</p>","frontmatter":{"categories":["React"],"title":"Apollo client에 헤더 추가하기","date":"Mar 30, 2019","tags":["React","GraphQL"]}}},"pageContext":{"comments":true,"previous":{"frontmatter":{"path":"/articles/2019-03/Nextjs-publicRuntimeConfig-적용","title":"Nextjs publicRuntimeConfig 적용","comments":true}},"next":{"frontmatter":{"path":"/articles/2019-04/Google-Cloud-Datastore-인덱스-수동-생성","title":"Google Cloud Datastore 인덱스 수동 생성","comments":true}}}}}