{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/articles/2016-03/Pwnable.kr-fd","result":{"data":{"site":{"siteMetadata":{"title":"GyeongSu Han's Github Pages","author":"@micalgenus","siteUrl":"https://micalgenus.github.io"}},"markdownRemark":{"id":"cddf12c2-eacf-549e-98f3-61ce0b17f551","html":"<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">ssh</span> fd@pwnable.kr <span class=\"token number\">2222</span>\nfd@ubuntu:~$ <span class=\"token function\">ls</span>\nfd  fd.c  flag</code></pre></div>\n<p>접속을 하게 되면 이와 같은 파일이 존재하게 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\">fd@ubuntu<span class=\"token operator\">:</span><span class=\"token operator\">~</span>$ cat fd<span class=\"token punctuation\">.</span>c\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdlib.h></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;string.h></span></span>\n<span class=\"token keyword\">char</span> buf<span class=\"token punctuation\">[</span><span class=\"token number\">32</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> argv<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> envp<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>argc<span class=\"token operator\">&lt;</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pass argv[1] a number\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">int</span> fd <span class=\"token operator\">=</span> <span class=\"token function\">atoi</span><span class=\"token punctuation\">(</span> argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x1234</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">int</span> len <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  len <span class=\"token operator\">=</span> <span class=\"token function\">read</span><span class=\"token punctuation\">(</span>fd<span class=\"token punctuation\">,</span> buf<span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">strcmp</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"LETMEWIN\\n\"</span><span class=\"token punctuation\">,</span> buf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"good job :)\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/bin/cat flag\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"learn about Linux file IO\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>이 문제를 보게 되면 14번째 줄에서 buf와 <strong>“LETMEWIN”</strong> 이라는 문자열을 비교하여 문제를 해결할 수 있습니다.</p>\n<p>buf에 입력을 하는 경우는 13번째 줄의 read를 통하여 입력을 하게 되는데, read의 인자로는 file descriptor, 저장될 배열의 주소, 읽을 사이즈를 인자로 받습니다.</p>\n<p>저장될 주소는 buf에 저장이 되고, 읽는 데이터는 fd에서 읽습니다. fd의 값을 사용자가 수정할 수 있는데, 리눅스 상에서의 표준 fd는 다음과 같습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">0: stdin\n1: stdout\n2: stderr</code></pre></div>\n<p><code class=\"language-text\">stdin</code>은 보통 키보드를 의미하며, <code class=\"language-text\">stdout</code>의 경우 출력창 이므로 콘솔, <code class=\"language-text\">stderr</code>또한 콘솔에 출력되는 내용을 말합니다. 우리가 입력을 받아야 하는데, 필요한 값은 fd가 0이 되도록 하는것 입니다.</p>\n<p>fd의 경우 atoi를 통하여 ascii를 int로 변경하여 되는 값에 0x1234를 뺀 값이 됩니다.</p>\n<p>fd = 0x1234 - 0x1234일 경우 0이 되므로 0x1234의 값인 4660을 넣어주어 문제를 해결하면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">fd@ubuntu:~$ ./fd <span class=\"token number\">4660</span>\nLETMEWIN\ngood job <span class=\"token builtin class-name\">:</span><span class=\"token punctuation\">)</span>\nmommy<span class=\"token operator\">!</span> I think I know what a <span class=\"token function\">file</span> descriptor is<span class=\"token operator\">!</span><span class=\"token operator\">!</span></code></pre></div>","frontmatter":{"categories":["Wargame"],"title":"Pwnable.kr fd","date":"Mar 16, 2016","tags":["Pwnable.kr"]}}},"pageContext":{"comments":true,"previous":{"frontmatter":{"path":"/articles/2016-01/Linux-Time","title":"Linux Time","comments":true}},"next":{"frontmatter":{"path":"/articles/2016-03/FTZ-level6","title":"FTZ Level6","comments":true}}}}}